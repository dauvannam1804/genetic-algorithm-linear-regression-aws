name: Auto Train and Deploy on EC2

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Run training and deploy scripts on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Exit on any error
            set -e

            echo "=== [1] Checking for Git installation ==="
            if ! command -v git &> /dev/null; then
              echo "Git is not installed. Installing Git..."
              sudo yum install git -y
            else
              echo "Git is already installed."
            fi

            echo "=== [2] Setting up project directory ==="
            PROJECT_DIR="/home/ec2-user/app"
            mkdir -p $PROJECT_DIR
            cd $PROJECT_DIR

            echo "=== [3] Pulling latest code ==="
            if [ ! -d ".git" ]; then
              echo "Cloning repository into $PROJECT_DIR..."
              git clone https://github.com/${{ github.repository }}.git .
            else
              echo "Repository exists. Pulling latest changes..."
              git stash
              git pull origin main
            fi

            echo "=== [4] Checking for uv installation ==="
            export PATH="$HOME/.local/bin:$PATH"
            if ! command -v uv &> /dev/null; then
                echo "uv is not installed. Installing uv..."
                curl -LsSf https://astral.sh/uv/install.sh | sh
            else
                echo "uv is already installed."
            fi

            echo "=== [5] Setting up environment with uv ==="
            uv sync

            echo "=== [6] Creating .env file from GitHub Secrets ==="
            # This creates the .env file that the Python scripts need to get AWS credentials.
            # The secrets themselves are stored securely in GitHub repository settings.
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > .env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
            echo "REGION=${{ secrets.AWS_REGION }}" >> .env

            echo "=== [7] Activating environment and running scripts ==="
            source .venv/bin/activate

            echo "--> Running Training Script..."
            chmod +x src/training_script.sh
            bash src/training_script.sh

            echo "--> Running Deploy Script..."
            chmod +x src/deploy_script.sh src/shutdown_script.sh
            bash src/deploy_script.sh

            echo "=== âœ… Deployment to EC2 Complete ==="
          EOF
